// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "02/26/2016 16:15:42"

// 
// Device: Altera EP3C16U484C6 Package UFBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ten_counter (
	cout,
	CLR,
	CLK,
	count);
output 	cout;
input 	CLR;
input 	CLK;
output 	[3:0] count;

// Design Ports Information
// cout	=>  Location: PIN_B1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[3]	=>  Location: PIN_J1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[2]	=>  Location: PIN_J2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[1]	=>  Location: PIN_J3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[0]	=>  Location: PIN_H1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLK	=>  Location: PIN_G21,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLR	=>  Location: PIN_G3,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \CLK~input_o ;
wire \CLK~inputclkctrl_outclk ;
wire \cout~output_o ;
wire \count[3]~output_o ;
wire \count[2]~output_o ;
wire \count[1]~output_o ;
wire \count[0]~output_o ;
wire \inst~0_combout ;
wire \CLR~input_o ;
wire \inst~q ;
wire \inst2~0_combout ;
wire \inst2~q ;
wire \inst17~combout ;
wire \inst3~q ;
wire \inst5~0_combout ;
wire \inst1~q ;
wire \inst23~0_combout ;


// Location: IOIBUF_X41_Y15_N1
cycloneiii_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G9
cycloneiii_clkctrl \CLK~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\CLK~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\CLK~inputclkctrl_outclk ));
// synopsys translate_off
defparam \CLK~inputclkctrl .clock_type = "global clock";
defparam \CLK~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOOBUF_X0_Y27_N16
cycloneiii_io_obuf \cout~output (
	.i(\inst23~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y20_N9
cycloneiii_io_obuf \count[3]~output (
	.i(\inst3~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[3]~output .bus_hold = "false";
defparam \count[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y20_N2
cycloneiii_io_obuf \count[2]~output (
	.i(\inst2~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[2]~output .bus_hold = "false";
defparam \count[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y21_N23
cycloneiii_io_obuf \count[1]~output (
	.i(\inst1~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[1]~output .bus_hold = "false";
defparam \count[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y21_N16
cycloneiii_io_obuf \count[0]~output (
	.i(\inst~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[0]~output .bus_hold = "false";
defparam \count[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N12
cycloneiii_lcell_comb \inst~0 (
// Equation(s):
// \inst~0_combout  = !\inst~q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst~0 .lut_mask = 16'h0F0F;
defparam \inst~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y23_N15
cycloneiii_io_ibuf \CLR~input (
	.i(CLR),
	.ibar(gnd),
	.o(\CLR~input_o ));
// synopsys translate_off
defparam \CLR~input .bus_hold = "false";
defparam \CLR~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X1_Y23_N13
dffeas inst(
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst~0_combout ),
	.asdata(vcc),
	.clrn(!\CLR~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst.is_wysiwyg = "true";
defparam inst.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N14
cycloneiii_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = \inst2~q  $ (((\inst1~q  & \inst~q )))

	.dataa(gnd),
	.datab(\inst1~q ),
	.datac(\inst2~q ),
	.datad(\inst~q ),
	.cin(gnd),
	.combout(\inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2~0 .lut_mask = 16'h3CF0;
defparam \inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y23_N15
dffeas inst2(
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst2~0_combout ),
	.asdata(vcc),
	.clrn(!\CLR~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst2.is_wysiwyg = "true";
defparam inst2.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N28
cycloneiii_lcell_comb inst17(
// Equation(s):
// \inst17~combout  = (\inst~q  & (\inst2~q  & ((\inst1~q )))) # (!\inst~q  & (((\inst3~q  & !\inst1~q ))))

	.dataa(\inst~q ),
	.datab(\inst2~q ),
	.datac(\inst3~q ),
	.datad(\inst1~q ),
	.cin(gnd),
	.combout(\inst17~combout ),
	.cout());
// synopsys translate_off
defparam inst17.lut_mask = 16'h8850;
defparam inst17.sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y23_N29
dffeas inst3(
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst17~combout ),
	.asdata(vcc),
	.clrn(!\CLR~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst3~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst3.is_wysiwyg = "true";
defparam inst3.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N18
cycloneiii_lcell_comb \inst5~0 (
// Equation(s):
// \inst5~0_combout  = (!\inst3~q  & (\inst1~q  $ (\inst~q )))

	.dataa(gnd),
	.datab(\inst3~q ),
	.datac(\inst1~q ),
	.datad(\inst~q ),
	.cin(gnd),
	.combout(\inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst5~0 .lut_mask = 16'h0330;
defparam \inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y23_N19
dffeas inst1(
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst5~0_combout ),
	.asdata(vcc),
	.clrn(!\CLR~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst1.is_wysiwyg = "true";
defparam inst1.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N20
cycloneiii_lcell_comb \inst23~0 (
// Equation(s):
// \inst23~0_combout  = (!\inst1~q  & (!\inst~q  & (!\inst3~q  & !\inst2~q )))

	.dataa(\inst1~q ),
	.datab(\inst~q ),
	.datac(\inst3~q ),
	.datad(\inst2~q ),
	.cin(gnd),
	.combout(\inst23~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst23~0 .lut_mask = 16'h0001;
defparam \inst23~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign cout = \cout~output_o ;

assign count[3] = \count[3]~output_o ;

assign count[2] = \count[2]~output_o ;

assign count[1] = \count[1]~output_o ;

assign count[0] = \count[0]~output_o ;

endmodule
